
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.1"

    defaultConfig {
        applicationId "com.eventersapp.marketplace"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 3
        versionName "1.2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    flavorDimensions 'mode'
    productFlavors {
        DEV {
            applicationId "com.eventersapp.marketplace.debug"
            dimension = 'mode'
            resValue "string", "app_name", "Eventers Marketplace Dev"
            resValue "string", "package_name", applicationId
            buildConfigField "String", "end_point", '"<DEV-URL>"'//Replace with dev url
        }
        PROD {
            applicationId "com.eventersapp.marketplace"
            dimension = 'mode'
            resValue "string", "app_name", "Eventers Marketplace"
            resValue "string", "package_name", applicationId
            buildConfigField "String", "end_point", '"<PROD-URL>"'//Replace with prod url
        }

    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'

            /** Disable Multi APK */
            splits.abi.enable = false
            splits.density.enable = false

            /** Disable PNG Crunching */
            aaptOptions.cruncherEnabled = false

            /** Disable Updating Build ID */
            ext.alwaysUpdateBuildId = false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    buildFeatures {
        dataBinding = true
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.6'
    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.8.2'
    implementation 'com.squareup.retrofit2:converter-gson:2.8.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.6.0'

    def kodein_version = '6.3.1'
    //Kodein Dependency Injection
    implementation "org.kodein.di:kodein-di-generic-jvm:$kodein_version"
    implementation "org.kodein.di:kodein-di-framework-android-x:$kodein_version"

    // Arch Components
    def arch_components = '2.3.0'
    //Navigation
    implementation "androidx.navigation:navigation-runtime-ktx:$arch_components"
    implementation "androidx.navigation:navigation-fragment-ktx:$arch_components"
    implementation "androidx.navigation:navigation-ui-ktx:$arch_components"

    def lifecycle_version = "2.2.0"
    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    //For Image Loading
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    //Material design
    implementation "com.google.android.material:material:1.3.0-alpha02"

    //Onboarding library
    implementation 'com.github.chyrta:AndroidOnboarder:0.7'

    //Firebase
    implementation "com.google.firebase:firebase-core:17.5.0"
    implementation "com.google.firebase:firebase-auth:19.4.0"
    implementation "com.google.firebase:firebase-messaging:20.2.4"
    implementation "com.google.android.gms:play-services-auth:18.1.0"
    // Recommended: Add the Firebase SDK for Google Analytics.
    implementation 'com.google.firebase:firebase-analytics:17.5.0'
    // Add the Firebase Crashlytics SDK.
    implementation 'com.google.firebase:firebase-crashlytics:17.2.1'

    //Facebook login
    implementation 'com.facebook.android:facebook-login:6.1.0'

    //Country code picker
    implementation 'com.github.joielechong:countrycodepicker:2.3.3'

    //Code scanner
    implementation 'com.budiyev.android:code-scanner:2.1.0'

    // Tus client
    implementation 'io.tus.java.client:tus-java-client:0.4.2'

    //Image Picker
    implementation 'com.github.dhaval2404:imagepicker-support:1.7.1'

    //Workmanager
    implementation 'androidx.work:work-runtime-ktx:2.4.0'

    //Algorand-sdk
    implementation 'com.algorand:algosdk:1.5.0'

    //Room Persistence Library
    def room_version = "2.2.5"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    //ZXing
    implementation('com.journeyapps:zxing-android-embedded:4.1.0') { transitive = false }
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'com.google.zxing:core:3.3.0'

    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation 'androidx.browser:browser:1.2.0'
}

// Apply the Crashlytics Gradle plugin
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.gms.google-services'